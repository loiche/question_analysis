import streamlit as st
from dataclasses import dataclass

@dataclass
class ApplicationTopPage:
    def main(self):
        st.set_page_config(layout="wide")
        st.header("テキストマイニング社内ツール")
        st.markdown("""
        本ツールは自由記述式のアンケートにテキストマイニングを実施する社内ツールです。
        テキストマイニング（text mining）とは文字・文章を対象としたデータマイニング（データから有用な情報を抽出すること）を指します。
        このツールによって自由記述のアンケートから重要な情報を簡単に抽出することができます。
        画面左側にある操作ページを上から数字順に実施し、テキストマイニングを実施してください。
        """)

        st.subheader("ページ説明")
        st.markdown("""
        1. **アプリトップページ**
            - アプリのトップページです（本ページ）。
        2. **分析したい文章のアップロード**
            - 標準端末上にあるテキストマイニングしたいファイルをアプリにアップロードするページです。
        3. **アップロードファイルの確認**
            - アップロードしたファイルの概要を確認するページです。
            - 抽出された単語の一覧や回答に紐づいたカテゴリなどを確認できます。
        4. **単語の置換・前処理の設定**
            - アップロードしたファイルに前処理を実施します。
            - 表記揺れ（ひらがな・カタカナ・漢字）対応のための文字列置換が実施できます。
        5. **ワードクラウド**
            - ワードクラウドによって文章中に出現した単語を可視化します。
        6. **共起ネットワーク分析**
            - 共起ネットワークという単語の繋がりの強さをネットワークとして表現する手法を用いて文章を可視化します。
        7. **文章内の単語の検索・集計**
            - 指定した単語が文章に含まれているかを検索、集計します。
        8. **カテゴリごとの単語の集計**
            - ユーザーがアップロードした文章にカテゴリが付与されていた場合、そのカテゴリごとに単語の検索・集計ができます。
        9. **ポジネガ分析**
            - 文章の内容がポジティブかネガティブか判定します。
        10. **文章分類（advance版）**    
            - 文章中の単語の出現傾向から文章を自動で分類します。
            - 適切な結果の出力するには機械学習・自然言語処理の知識が必要になるので、使い方が不明な方はアプリ管理者までお問い合わせください。
        """)

        st.subheader("テキストマイニングの手法について")
        st.markdown("""
        テキストマイニングではまず文章から単語を抽出する **形態素解析（morphological analysis）** を実施します。
        """)

        st.subheader("構成・料金")
        st.markdown("""
        """)
        st.subheader("リリースノート")
        st.markdown("""
        - 20220401-v0.0.1:プレリリース
        - 20220509-v0.1.0:リリース
        """)
        st.subheader("お問い合わせ")

def main():
    ATP = ApplicationTopPage()
    ATP.main()

if __name__ == "__main__":
    main()